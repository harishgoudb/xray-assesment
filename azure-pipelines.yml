# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
  - task: JFrogMaven@1
    inputs:
      mavenPomFile: 'pom.xml'
      goals: 'clean install'
      artifactoryResolverService: 'kimt1'
      targetResolveReleaseRepo: 'test-plk-libs-release'
      targetResolveSnapshotRepo: 'test-plk-libs-snapshot'
      artifactoryDeployService: 'kimt1'
      targetDeployReleaseRepo: 'test-plk-libs-release'
      targetDeploySnapshotRepo: 'test-plk-libs-snapshot'
      collectBuildInfo: true
      buildName: '$(Build.DefinitionName)'
      buildNumber: '$(Build.BuildNumber)'
      includeEnvVars: true
      javaHomeOption: 'JDKVersion'
  - task: JFrogPublishBuildInfo@1
    inputs:
      artifactoryConnection: 'kimt1'
      buildName: '$(Build.DefinitionName)'
      buildNumber: '$(Build.BuildNumber)'
  - task: JFrogBuildScan@1 
    inputs:
      xrayConnection: 'kimtxray'
      buildName: '$(Build.DefinitionName)'
      buildNumber: '$(Build.BuildNumber)'
      allowFailBuild: true
      vuln: false